{"version":3,"sources":["helper.js","Button.js","App.js","index.js"],"names":["spellButton","value","NaN","Button","props","id","className","classes","onClick","e","preventDefault","target","blur","handleClick","NUMBERS","App","state","input","result","handleNumberButtonClick","bind","handleOperationButtonClick","handleDecimalButtonClick","handleDisplayButtonClick","handleClearButtonClick","eventValue","this","toString","includes","setState","isNaN","length","slice","eval","type","readOnly","disabled","split","map","elem","key","charCodeAt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed9b450f.chunk.js","sourcesContent":["export  const spellButton = (value) => {\r\n    switch(value) {\r\n        case '0':\r\n            return 'zero';\r\n        case '1':\r\n            return 'one';\r\n        case '2':\r\n            return 'two';\r\n        case '3':\r\n            return 'three';\r\n        case '4':\r\n            return 'four';\r\n        case '5':\r\n            return 'five';\r\n        case '6':\r\n            return 'six';\r\n        case '7':\r\n            return 'seven';\r\n        case '8':\r\n            return 'eight';\r\n        case '9':\r\n            return 'nine';\r\n        case '+':\r\n            return 'add';\r\n        case '-':\r\n            return 'subtract';\r\n        case '*':\r\n            return 'multiply';\r\n        case '/':\r\n            return 'divide';\r\n        case '.':\r\n            return 'decimal';\r\n        case '=':\r\n            return 'equals';\r\n        case 'AC':\r\n            return 'clear';\r\n        default:\r\n            return NaN;\r\n    }\r\n}","import React from 'react';\r\nimport { spellButton } from './helper';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button \r\n            id={spellButton(props.value)}\r\n            value={props.value}\r\n            className={props.classes}\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                e.target.blur();\r\n                if (props.handleClick) {\r\n                    props.handleClick(e);\r\n                }\r\n            }}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\nimport Button from './Button';\nimport './App.css';\n\nconst NUMBERS = '1234567890';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: '0',\n      result: ''\n    }\n\n    this.handleNumberButtonClick = this.handleNumberButtonClick.bind(this);\n    this.handleOperationButtonClick = this.handleOperationButtonClick.bind(this);\n    this.handleDecimalButtonClick = this.handleDecimalButtonClick.bind(this);\n    this.handleDisplayButtonClick = this.handleDisplayButtonClick.bind(this);\n    this.handleClearButtonClick = this.handleClearButtonClick.bind(this);\n  }\n\n  handleNumberButtonClick(e) {\n    const eventValue = e.target.value;\n\n    // set input and result to inital if it holds NaN\n    //  or if result includes '=' which indecate end of calculation\n    if (this.state.input.toString() === NaN.toString() ||\n        this.state.result.includes('=')) {\n      this.setState({\n        input: '',\n        result: ''\n      })\n    }\n    // set input to initial if it holds operators\n    else if (isNaN(this.state.input)) {\n      this.setState({\n        input: ''\n      })\n    }\n\n    // if input in inital state, replace inital state with event value\n    if (this.state.input === '0' && eventValue !== '0') {\n      this.setState(state => ({\n        input: eventValue,\n        result: state.result + eventValue\n      }))\n    }\n\n    // if input isn't in inital state add value to current input state\n    else if (this.state.input !== '0') {\n      this.setState(state => ({\n        input: state.input + eventValue,\n        result: state.result + eventValue\n      }))\n    }\n  }\n\n  handleOperationButtonClick(e) {\n    const eventValue = e.target.value;\n\n    if (this.state.result.includes('=')) {\n      this.setState(state => ({\n        result: state.input\n      }))\n    }\n    \n    if (!this.state.result.length) {\n      if (eventValue === '-') {\n        this.setState({\n          input: eventValue,\n          result: eventValue\n        })\n      }\n      else {\n        return;\n      }\n    }\n    else if (this.state.result.length === 1) {\n      if (eventValue === '-' && this.state.result[0] !== '-') {\n        this.setState(state => ({\n          input: eventValue,\n          result: state.result + eventValue\n        }))\n        return;\n      }\n      else if (eventValue !== '-' && !isNaN(this.state.result[0])) {\n        this.setState(state => ({\n          input: eventValue,\n          result: state.result + eventValue\n        }))\n        return;\n      }\n    }\n    else {\n      if (!isNaN(this.state.result[this.state.result.length - 1])) {\n        this.setState(state => ({\n          input: eventValue,\n          result: state.result + eventValue\n        }))\n      }\n      else if (isNaN(this.state.result[this.state.result.length - 1]) &&\n                isNaN(this.state.result[this.state.result.length - 2])) {\n        if (eventValue === '-') {\n          this.setState(state => ({\n            input: eventValue,\n            result: state.result.slice(0, state.result.length - 1) + eventValue\n          }))\n        }\n        else {\n          this.setState(state => ({\n            input: eventValue,\n            result: state.result.slice(0, state.result.length - 2) + eventValue\n          }))\n        }\n      }\n      else if (eventValue !== '-') {\n        this.setState(state => ({\n          input: eventValue,\n          result: state.result.slice(0, state.result.length - 1) + eventValue\n        }))\n      }\n      else if (eventValue === '-') {\n        this.setState(state => ({\n          input: eventValue,\n          result: state.result + eventValue\n        }))\n      }\n    }\n  }\n\n  handleDecimalButtonClick() {\n    // check if input doesn't contain a decimal point\n    if (!this.state.input.includes('.')) {\n      this.setState(state => ({\n        input: state.input + '.',\n        result: state.result + '.'\n      }))\n    }\n  }\n\n  /* eslint no-eval: 0 */\n  handleDisplayButtonClick() {\n    let result;\n    try {\n      result = eval(this.state.result).toString();\n    }\n    catch {\n      this.setState({\n        result: NaN,\n        input: NaN\n      })\n    }\n    if (result) {\n      this.setState(state => ({\n        result: state.result + '=' + result,\n        input: result\n      }))\n    }\n  }\n\n  handleClearButtonClick() {\n    this.setState({\n      input: '0',\n      result: ''\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"display\">\n          <input id=\"preview\" className=\"display\" type=\"text\"\n            readOnly=\"readOnly\" disabled=\"disabled\"\n            value={this.state.result}\n          />\n          <input id=\"display\" className=\"display\"\n            readOnly=\"readOnly\" disabled=\"disabled\"\n            value={this.state.input}\n          />\n        </div>\n\n        <div className=\"grid-container\">\n          {'+-*/'.split('').map(elem => {\n            return (\n              <Button key={elem.charCodeAt(0)} value={elem} \n              handleClick={this.handleOperationButtonClick}\n              classes=\"grid-item button\" />\n            )\n          })}\n\n          {NUMBERS.split('').map(elem => {\n            return(\n              <Button  value={elem} key={elem} \n              handleClick={this.handleNumberButtonClick} \n              classes=\"grid-items button numbers\"/>\n            )\n          })}\n\n          <Button value={'AC'} classes=\"grid-items button\" \n            handleClick={this.handleClearButtonClick} />\n          <Button value={'.'} classes=\"grid-items button\"\n            handleClick={this.handleDecimalButtonClick} />\n          <Button value=\"=\" classes=\"grid-items button\" \n            handleClick={this.handleDisplayButtonClick} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}